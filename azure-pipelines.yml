trigger:
    branches:
      include:
      - master
    paths:
      exclude:
      - CHANGELOG.md

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - task: UseDotNet@2
    displayName: 'Use .NET 6 Core sdk'
    enabled: false
    inputs:
      packageType: sdk
      version: 6.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    name: Test
    inputs:
      command: 'test'
      projects: 'src/**/*.Tests.csproj'

  - task: DotNetCoreCLI@2
    name: Publish_Api
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: 'src/UniCom.Newton.UI/*.csproj'
      arguments: '/p:Configuration=Release --output $(Build.ArtifactStagingDirectory)/api'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: DotNetCoreCLI@2
    name: Publish_Service
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: 'src/UniCom.Newton.Service/*.csproj'
      arguments: '--output $(Build.ArtifactStagingDirectory)/service /p:Configuration=Release'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: Bash@3
    name: Release
    env:
      STAGING_PATH: $(Build.ArtifactStagingDirectory)
      LOCAL_PATH: $(Build.Repository.LocalPath)
      DOCKER_HUB_PASSWORD: $(DOCKER_HUB_PASSWORD)
    inputs:
      targetType: 'inline'
      script: |
        time curl -L https://github.com/Elders/blob/releases/download/SemRel-01/node_modules.tar.gz | tar mx -I pigz
        time npx semantic-release --no-ci

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'ci'
      artifact: 'manifest'
      publishLocation: 'pipeline'
